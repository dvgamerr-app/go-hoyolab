name: Go

on:
  push:
    branches: [ "main" ]
    tags:
      - "v*"
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        go-version: [1.19]
        os: [windows-latest] # [ubuntu-latest, macos-latest, windows-latest]
        name: [x64-windows-amd64]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: ${{ matrix.go-version }}

    - name: Caches
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-golang-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-golang-

    - name: Test
      run: go test -v .

    - name: Build
      if: success()
      id: build
      run: |
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=v$(echo $VERSION | sed -e 's/^v//')

        ZIPFILE=hoyolab-$VERSION-${{ matrix.name }}.zip
        echo ::set-output name=zipfile::${ZIPFILE}
        echo ::set-output name=version::${VERSION}

        go build -ldflags -H=windowsgui .
        zip $ZIPFILE hoyolab.exe README.md

    - name: Create Release
      if: success() && !contains(github.ref, 'main')
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        release_name: Release ${{ steps.build.outputs.version }}
        prerelease: true
        draft: false

    - name: Upload Release
      if: success() && !contains(github.ref, 'main')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, 
        asset_path: ${{ steps.build.outputs.zipfile }}
        asset_name: ${{ steps.build.outputs.zipfile }}
        asset_content_type: application/zip